#' Must be between 1 and 9. If not specified it's 2 by default.
#' It can be escaped using \\.
#'
#' @examples
format.tempo <- function(x, format = "%H:%M:%S", ...) {
positions <- gregexec("%[HMShms][1-9]?", format)[[1]]
no_width <- attr(positions, "match.length", exact = TRUE) == 2
positions <- as.integer(positions)
letters <- substring(format, positions + 1L, positions + 1L)
widths  <- substring(format, positions + 2L, positions + 2L)
calculated <- numeric(6) %>% set_names(c("H", "M", "S", "h", "m", "s"))
to_calculate <- match(unique(letters), names(calculated))
for (i in to_calculate) {
calculated[i] <- tempo[[i]](x)
}
values <- calculated[match(letters, names(calculated))]
no_width <- attr(positions, "match.length") == 2
widths[no_width] <- "2"
widths <- as.integer(widths)
replacements <- mapply(formatC, x = values, width = widths)
browser()
gsub("%[HMShms][1-9]?", replacements, format)
}
format(my_time)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
format(my_time)
positions
no_width
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
positions
attr(positions, "match.length", exact = TRUE)
attr(positions, "match.length", exact = TRUE) == 2
as.logical(no_width)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
positions
no_width
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
values
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
format(my_time)
freduce
alist(s = "hey", r = , p = "%")
alist(s = "hey", r = , p = "%", {sub(pattern = p, replacement = r, x = s)})
alist(s = "hey", r = , p = "%", {sub(pattern = p, replacement = r, x = s)}) %>% as.function()
list(
s = string,
r = substitute(),
p = pattern
)
list(
s = "string",
r = substitute(),
p = "pattern"
)
list(
s = "string",
r = substitute(),
p = "pattern",
)
args <- list(
s = "string",
r = substitute(),
p = "pattern",
quote(sub(x = s, pattern = p, replacement = r))
)
args <- list(
s = "string",
r = substitute(),
p = "pattern",
quote(sub(x = s, pattern = p, replacement = r))
)
args
args %>% as.function()
str_replace_vectorized <- function(string, pattern, replacements) {
f <- as.function(list(
s = string,
r = substitute(),
p = pattern,
quote(sub(x = s, pattern = p, replacement = r))
))
Reduce(f, c(string, replacements))
}
str_replace_vectorized("hello", ".", c("a", "b"))
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
format(my_time)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
format(my_time, "It was %h hours")
format(my_time, "It was %h6 hours")
format(my_time, "It was %h10 hours")
format(my_time, "It was %h1 hours")
format(my_time, "It was %h2 hours")
format(my_time, "It was %h3 hours")
format(my_time, "It was %h4 hours")
format(my_time, "It was %h9 hours")
format(my_time, "It was %h hours, which is the same as %m minutes")
format(my_time, "It was %h hours, which is the same as %m minutes, and %s in seconds")
format(my_time, "It was %h hours, which is the same as %m minutes, and %s in seconds")
format(my_time, "%H4::%M4::%S4 = %s sec")
format(my_time, "%H4::%M4::%S1 = %s sec")
format(my_time, "%H4::%M4::%S0 = %s sec")
format(my_time, "%H4::%M4::%S1 = %s sec")
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
format(my_time, "%H4::%M4::%S1 = %s sec")
format(my_time, "%H4::%M4::%S0 = %s sec")
format(my_time, "%H4::%M4::%S-1 = %s sec")
format(my_time, "%H4::%M4::%S = %s sec")
format(Time(5))
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
format(Tempo(5))
format(Tempo(5), "%S")
format(Tempo(5), "%s")
format(Tempo(5), "%S1")
format(Tempo(5), "%H4\n%M4\n%Y")
format(Tempo(5), "%H4\n%M4\n%S4")
format(Tempo(1234), "%H4\n%M4\n%S4")
format(Tempo(12345), "%H4\n%M4\n%S4")
format(Tempo(123456), "%H4\n%M4\n%S4")
format(Tempo(1234567), "%H4\n%M4\n%S4")
format(Tempo(1234567), "%H4\n%M4\n%S4")
format(Tempo(1234567), "%H4\n%M4\n%S4") %>% cat
format(Tempo(1234567), "%S") %>% cat
format(Tempo(1234567), "%S, %M") %>% cat
format(Tempo(1234567), "%S, %M = %h") %>% cat
format(Tempo(1234567), "%S, %M = %h8") %>% cat
format(Tempo(1234567), "%S, %M = %h5") %>% cat
format.default
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
my_tempo <- Tempo(3750)
my_tempo
tempo$minutes_of(my_tempo)
my_tempo <- Tempo(3750)
my_tempo
tempo$minute_of(my_tempo)
my_tempo <- Tempo(3750)
my_tempo
tempo$minute_of(my_tempo)
tempo%in_minutes(my_tempo)
my_tempo <- Tempo(3750)
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
my_tempo <- Tempo(3750)
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
my_tempo <- Tempo(3750)
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
my_tempo <- Tempo(3735)
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
my_tempo <- Tempo(c(3735, 120))
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
my_tempo <- Tempo(c(3735, 120))
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
my_tempo <- Tempo(c(3735, 1), 1)
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
my_tempo <- Tempo(c(3735))
my_tempo
tempo$minute_of(my_tempo)
tempo$in_minutes(my_tempo)
roxygen2::roxygenise()
roxygen2::roxygenise()
pkgload::dev_help('format.tempo')
pkgload::dev_help('tempo')
pkgload::dev_help('format.tempo')
pkgload::dev_help('tempo')
roxygen2::roxygenise()
pkgload::dev_help('Tempo')
f <- function() {
do.call("return", list("f"), envir = parent.frame())
}
g <- function() {
f()
return("g")
}
g()
return_at <- function(x, n = 1L, envir) {
if (missing(envir))
envir <- parent.frame(n + 1L)
do.call("return", list(x), envir = envir)
}
g <- function() {
f()
return(0)
}
f <- function() {
a <- 1
return_at(a)
}
g()
g <- function() {
f()
return(0)
}
f <- function() {
a <- 1
return_at(a, 2)
}
g()
roxygen2::roxygenise()
pkgload::dev_help('Tempo')
pkgload::dev_help('tempo')
library(layer)
??Tempo
??tempo
tempo$hours_of()
factor
?roxygen
??roxygen
vignette("rd")
ifelse
roxygen2::roxygenise()
pkgload::dev_help('tempo')
pkgload::dev_help('tempo')
roxygen2::roxygenise()
pkgload::dev_help('Tempo')
roxygen2::roxygenise()
vignette("rd")
roxygen2::roxygenise()
roxygen2::roxygenise()
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
roxygen2::roxygenise()
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
roxygen2::roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(layer)
factor
factor(c(1, 3, 2))
roxygen2::roxygenise()
library(layer)
factor(sample(letters))
tempo$hello
roxygen2::roxygenise()
library(layer)
str_replace_if_any
sample
roxygen2::roxygenise()
pkgload::dev_help('sample')
roxygen2::roxygenise()
pkgload::dev_help('sample')
source("C:/Users/Benet/Projects/Rpackages/bendr/R/shorts.R")
pkgload::dev_help('sample')
roxygen2::roxygenise()
roxygen2::roxygenise()
pkgload::dev_help('sample')
formatC(01.456, width = 2)
formatC(01.456, width = 2, flag = 0)
formatC(01.456, width = 3, flag = 0)
formatC(01.456, width = 5, flag = 0)
formatC(01.456, width = 10, flag = 0)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
Tempo(102)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/utils.R")
Tempo(102)
Tempo(202)
Tempo(3202)
Tempo(3203)
Tempo(3208)
a <- Tempo(3208)
format(a, "%S:%M")
43.125462 %% 1
43.125462 %% 1 -> a
a
formatC(a, digits = 2)
formatC(a, digits = 3)
formatC(a, digits = 1)
formatC(a, digits = 10)
formatC(a, digits = 10, width = 0)
formatC(a, digits = 10, width = -10)
format(a, digits = 10)
format(a, digits = 2)
format(a, digits = 15)
format(a, digits = 600)
format(a, digits = 50)
format(a, digits = 20)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
a
a <- Tempo(124.23631)
a
a
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
a <- Tempo(124.23631)
a
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
a <- Tempo(124.23631)
a
Tempo(124)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
Tempo(124)
Tempo(124.1)
Tempo(124.08)
format(1, digits = 2)
format(1, nsmall = 2)
format(1.12345, nsmall = 2)
format(1.9876543, nsmall = 2)
format(1.9876543, nsmall = 2, digits = 2)
format(1, nsmall = 2, digits = 2)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
Tempo(124.08)
Tempo(124.1)
Tempo(124)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
Tempo(124)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/times.R")
Tempo(124)
Tempo(1289542.128954)
library(layer)
source("C:/Users/Benet/Projects/Rpackages/bendr/R/shorts.R")
my_fun(1:5)
library(layer)
library(layer)
layer:::list_to_function()
layer:::list_to_function
roxygen2::roxygenise()
library(layer)
install.packages("https://github.com/benet1one/layer")
devtools::install_github("benet1one/layer")
layer
outer
roxygen2::roxygenise()
roxygen2::roxygenise()
pkgload::dev_help('wrap')
pkgload::dev_help('sample')
#' Wrap a number between a minimum and a maximum, as understood in Blender.
#'
#' @description
#' Simply calculates \code{min + (x - min) %% (max - min)}
#'
#' @param x Number to wrap.
#' @param min Minimum.
#' @param max Maximum, not inclusive.
#' @export
wrap <- function(x, min, max) {
min + (x - min) %% (max - min)
}
wrap(5, 1.1, 5.1)
wrap(6, 1.1, 5.1)
wrap(1, 1.1, 5.1)
wrap(0, 1.1, 5.1)
roxygen2::roxygenise()
roxygen2::roxygenise()
pkgload::dev_help('wrap')
roxygen2::roxygenise()
pkgload::dev_help('wrap')
roxygen2::roxygenise()
pkgload::dev_help('wrap')
roxygen2::roxygenise()
pkgload::dev_help('format.tempo')
pkgload::dev_help('wrap')
library(layer)
flatten
purrr::flatten(jump_structure)
purrr::flatten(list(a = list(b = 1, c = 2), g = list(c = 1)))
purrr::flatten(list(a = list(b = 1, c = 2), g = list(c = 5)))
purrr::flatten(list(a = list(b = 1, c = 2), g = list(h = 5)))
purrr::flatten(list(a = list(b = 1, c = 2), g = list(b = 5)))
purrr::flatten(list(a = list(b = 1, c = 2), g = list(b = 5)))$b
library(purrr)
flatten
library(layer)
roxygen2::roxygenise()
pkgload::dev_help('map_range')
library(layer)
map_range((1:10)^2, to = 2:8) %>% plot()
map_range((1:10)^2, to = 2:8) %>% lines()
map_range((1:10)^4, to = 2:8) %>% barplot()
map_range((1:10)^4, from = 0:50, to = 2:8, clamp = TRUE) %>% barplot()
source("C:/Users/Benet/Projects/Rpackages/bendr/R/shorts.R")
map_range((1:10)^4, from = 0:50, to = 2:8, clamp = TRUE) %>% barplot()
map_range((1:10)^2, from = 0:50, to = 2:8, clamp = TRUE) %>% barplot()
source("C:/Users/Benet/Projects/Rpackages/bendr/R/shorts.R")
map_range((1:10)^2, from = 0:90, to = 2:8, clamp = TRUE) %>% barplot()
map_range((1:10)^2, from = 0:95, to = 2:8, clamp = TRUE) %>% barplot()
map_range((1:10)^2, from = 0:100, to = 2:8, clamp = TRUE) %>% barplot()
(1:10)^2
map_range((1:10)^2, to = 2:8, clamp = TRUE) %>% barplot()
roxygen2::roxygenize()
library(layer)
map_range((1:10)^2, from = 0:50, to = 2:8, clamp = TRUE) %>% barplot()
map_range((1:10)^2, to = 2:8) %>% barplot()
map_range((1:10)^2, from = 0:50, to = 2:8, clamp = TRUE) %>% barplot()
map_range((1:10)^2, to = 2:8) %>% barplot()
map_range((1:10)^2, from = 0:50, to = 2:8, clamp = TRUE) %>% barplot()
map_range((1:10)^2, from = 0:50, to = 2:8, clamp = FALSE) %>% barplot()
as_function(quote(2*x))
rlang::as_function(quote(2*x))
rlang::as_function(expression(2*x))
rlang::as_function(~2*x)
rlang::as_function(~2*x, arg = "x")
rlang::as_function(~2*x, arg = x)
rlang::as_function(~2*x, arg = asdf)
rlang::as_function(~2*y, arg = "asdf")
class(quote(2*x))
call_fn(quote(2*x))
rlang::call_fn(quote(2*x))
rlang::as_function
as.function(alist(a = , mean(a)))
as.function(alist(a = , {mean(a)}))
as.function(alist(a = , b = 1, {mean(a) + b}))
substitute()
substitute()
substitute()
substitute(asd)
substitute(asd, list(asd = 2))
substitute(asd + daf, list(asd = 2))
substitute(quote(a +b))
substituteDirect(quote(a +b))
substituteDirect(a +b)
calls_to_functions <- function(expr, args) {
if (missing(args))
args <- all.vars(expr)
args <- rep(alist(name = )) %>%
set_names(args)
fun_list <- append(args, substitute(expr))
as.function(fun_list)
}
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
a <- alist(
2*a + 3*b - 4*c,
4*a - 6*b + 3*c
)
a
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(a, c("b", "c"))
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(a, c("b", "c"))
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(a, c("b", "c"))
my_calls <- alist(
x + mean(y) / z,
x^2 + sd(y) / z^2,
)
my_calls <- alist(
x + mean(y) / z,
x^2 + sd(y) / z^2,
sqrt(x) + y + z
)
#' Convert a list of calls to a list of functions
#'
#' @param exprs List of calls.
#' @param args Arguments shared by all functions.
#'
#' @return List of functions.
#' @export
#'
#' @examples
#'
calls_to_functions <- function(exprs, args) {
if (missing(args))
args <- all.vars(exprs)
args <- rep(alist(name = ), length(args)) %>%
set_names(args)
fun_list <- append(args, exprs)
as.function(fun_list)
}
library(magrittr)
calls_to_functions(my_calls)
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(my_calls)
args
args <- rep(alist(name = ), length(args)) %>%
set_names(args)
args
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(my_calls)
args <- rep(alist(name = ), length(args)) %>%
set_names(args)
fun_list <- append(args, exprs)
as.function(fun_list)
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(my_calls)
args <- rep(alist(name = ), length(args)) %>%
set_names(args)
args
exprs
fun_list <- append(args, exprs)
fun_list
as.function(fun_list)
my_calls
calls_to_functions(my_calls)
args <- rep(alist(name = ), length(args)) %>%
set_names(args)
fun_list <- append(args, exprs)
fun_list
as.function(fun_list)
calls_to_functions(my_calls[[1]])
calls_to_functions(my_calls)
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(my_calls)
source("C:/Users/Benet/Projects/Rpackages/layer/R/utils.R")
calls_to_functions(my_calls)
{{asd}}
calls_to_functions(my_calls, c("x", "y"))
roxygen2::roxygenise()
pkgload::dev_help('calls_to_functions')
roxygen2::roxygenise()
pkgload::dev_help('calls_to_functions')
